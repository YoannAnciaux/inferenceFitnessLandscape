% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/generate_model.R
\name{generate_model}
\alias{generate_model}
\title{Closure function which returns a function generating \code{nb_mut} fitnesses
of mutant(s) (based on a wild-type of fitness given in the last element of the
first row of \code{empirical_fl}). The model used for generating the mutant can
chosen with \code{model_type}.
The function returned then take a list of varying length as argument depending
on \code{model_type}.}
\usage{
generate_model(empirical_fl, model_type, fun_args = list(), ...)
}
\arguments{
\item{empirical_fl}{A matrix corresponding to an empirical fitness landscape.
The first ncol-1 columns correspond to a genotype table. The rows correspond
to different genotypes and the columns to the mutations that are considered for
these genotypes. A genotype (at a certain row) has a given mutation when there
is a 1 in the corresponding column.
The column to of empirical_fl correspond to the fitness of each genotype. Only
the fitness of the wt (i.e. the row in the genotype table with only zeros) is
used.}

\item{model_type}{A character corresponding to one of the following implemented
models :
\describe{
  \item{"fgmrmut"}{random mutation in isotropic FGM. See \code{\link{model_fgmrmut}}}
  \item{"fgmsmut"}{selected mutation in isotropic FGM. See \code{\link{model_fgmsmut}}}
  \item{"fgmcsmut"}{coselected mutation in isotropic FGM. See \code{\link{model_fgmcsmut}}}
  \item{"fgmrmut2env"}{random mutation in isotropic FGM with a refence environment and a environment. See \code{\link{model_fgmrmut_2env}}}
  \item{"fgmsmut2env"}{selected mutation in isotropic FGM with a refence environment and a environment. See \code{\link{model_fgmsmut_2env}}}
  \item{"fgmcsmut2env"}{coselected mutation in isotropic FGM with a refence environment and a environment. See \code{\link{model_fgmcsmut_2env}}}
}}

\item{fun_args}{List of argument for a given \code{model_type}.
Argument *_ref are mandatory parameters for the environment of reference in models with two environments
\describe{
  \item{nb_mut_rand}{optionnal for "fgmsmut", "fgmcsmut", "fgmsmut2env" and "fgmcsmut2env". See \code{\link{model_fgmrmut_2env}}}
  \item{fitness_wt_ref}{mandatory for "fgmsmut2env" and "fgmcsmut2env". See \code{\link{model_fgmrmut_2env}}}
  \item{n_ref}{mandatory for "fgmrmut2env", "fgmsmut2env" and "fgmcsmut2env". See \code{\link{model_fgmrmut_2env}}}
  \item{lambda_ref}{mandatory for "fgmrmut2env", "fgmsmut2env" and "fgmcsmut2env". See \code{\link{model_fgmrmut_2env}}}
  \item{maxfitness_ref}{mandatory for "fgmrmut2env", "fgmsmut2env" and "fgmcsmut2env". See \code{\link{model_fgmrmut_2env}}}
  \item{alpha_ref}{mandatory for ""fgmrmut2env", fgmsmut2env" and "fgmcsmut2env". See \code{\link{model_fgmrmut_2env}}}
  \item{Q_ref}{mandatory for "fgmrmut2env", "fgmsmut2env" and "fgmcsmut2env". See \code{\link{model_fgmrmut_2env}}}
  \item{m_ref}{mandatory for "fgmrmut2env", "fgmsmut2env" and "fgmcsmut2env". See \code{\link{model_fgmrmut_2env}}}
}}

\item{...}{Extra arguments which will be passed to \code{\link[utils]{read.table}} if an empirical
fitness landscape is provided as a file in \code{empirical_fl}}
}
\value{
A function for generating mutants following the model from \code{model_type}
and the genotype table and the fitness of the wild type given in \code{empirical_fl}.
}
\description{
Closure function which returns a function generating \code{nb_mut} fitnesses
of mutant(s) (based on a wild-type of fitness given in the last element of the
first row of \code{empirical_fl}). The model used for generating the mutant can
chosen with \code{model_type}.
The function returned then take a list of varying length as argument depending
on \code{model_type}.
}
\examples{
#random mutation in isotropic FGM
empirical_fl <- unname(cbind(as.matrix(expand.grid(rep(list(0:1), 3))), seq(0.1, 0.8, 0.1)))
model <- generate_model(empirical_fl = empirical_fl, model_type = "fgmrmut")
model(3, 0.1, 1, 1/2, 2, 3)
#selected mutation in isotropic FGM
empirical_fl <- unname(cbind(as.matrix(expand.grid(rep(list(0:1), 3))), seq(0.1, 0.8, 0.1)))
model <- generate_model(empirical_fl = empirical_fl, model_type = "fgmsmut",
                        fun_args = list(nb_mut_rand = 10^5))
model(3, 0.1, 1, 1/2, 2, 3)
#coselected mutation in isotropic FGM
empirical_fl <- unname(cbind(as.matrix(expand.grid(rep(list(0:1), 3))), seq(0.1, 0.8, 0.1)))
model <- generate_model(empirical_fl = empirical_fl, model_type = "fgmcsmut",
                        fun_args = list(nb_mut_rand = 10^5))
model(3, 0.1, 1, 1/2, 2, 3)
}
